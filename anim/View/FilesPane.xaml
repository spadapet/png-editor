<Grid
    x:Class="anim.FilesPane"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:anim"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DataContext="{d:DesignData Type=local:FilesPaneVM, IsDesignTimeCreatable=True}"
    d:DesignHeight="400"
    d:DesignWidth="200">

    <Grid.Resources>
        <x:Double x:Key="RowHeight">20</x:Double>
        <GridLength x:Key="RowGridHeight">20</GridLength>

        <BitmapImage x:Key="FolderClosedIcon" UriSource="ms-appx:///Assets/Icons/folder.png" />
        <BitmapImage x:Key="FolderOpenIcon" UriSource="ms-appx:///Assets/Icons/folder_open.png" />
        <BitmapImage x:Key="PictureIcon" UriSource="ms-appx:///Assets/Icons/picture.png" />
        <BitmapImage x:Key="PictureEditIcon" UriSource="ms-appx:///Assets/Icons/picture-edit.png" />

        <local:BoolToVisibleConverter x:Key="BoolToVisible" />
        <local:BoolToVisibleConverter x:Key="BoolToInvisible" Inverse="True" />
        <local:BoolToObjectConverter x:Key="BoolToFolder" ObjectTrue="{StaticResource FolderOpenIcon}" ObjectFalse="{StaticResource FolderClosedIcon}" />
        <local:BoolToObjectConverter x:Key="BoolToPicture" ObjectTrue="{StaticResource PictureEditIcon}" ObjectFalse="{StaticResource PictureIcon}" />
        <local:LevelToIndentConverter x:Key="IndentConverter" IndentSize="{StaticResource RowHeight}" />

        <Style x:Key="ExpanderButtonStyle" TargetType="ToggleButton">
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="ClickMode" Value="Press" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Background="Transparent" Width="{StaticResource RowHeight}" Height="{StaticResource RowHeight}">
                            <Path Name="ClosedArrow" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="Black" StrokeThickness="1" Data="M5.5,4.5 9.5,8.5 5.5,12.5 z" />
                            <Path Name="ExpandedArrow" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" Fill="Black" Data="M4,12 11,5 11,12 z" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="ClosedArrow.Stroke" Value="{StaticResource SystemControlHighlightAccentBrush}" />
                                            <Setter Target="ClosedArrow.Fill" Value="{StaticResource SystemControlHighlightAccentBrush}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="ClosedArrow.Stroke" Value="{StaticResource SystemControlHighlightAccentBrush}" />
                                            <Setter Target="ClosedArrow.Fill" Value="{StaticResource SystemControlHighlightAccentBrush}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                    <VisualState x:Name="Checked">
                                        <VisualState.Setters>
                                            <Setter Target="ClosedArrow.Visibility" Value="Collapsed" />
                                            <Setter Target="ExpandedArrow.Visibility" Value="Visible" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="ClosedArrow.Visibility" Value="Collapsed" />
                                            <Setter Target="ExpandedArrow.Visibility" Value="Visible" />
                                            <Setter Target="ExpandedArrow.Fill" Value="{StaticResource SystemControlHighlightAccentBrush}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <VisualState.Setters>
                                            <Setter Target="ClosedArrow.Visibility" Value="Collapsed" />
                                            <Setter Target="ExpandedArrow.Visibility" Value="Visible" />
                                            <Setter Target="ExpandedArrow.Fill" Value="{StaticResource SystemControlHighlightAccentBrush}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CheckedDisabled" />
                                    <VisualState x:Name="Indeterminate" />
                                    <VisualState x:Name="IndeterminatePointerOver" />
                                    <VisualState x:Name="IndeterminatePressed" />
                                    <VisualState x:Name="IndeterminateDisabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ItemIconStyle" TargetType="Image">
            <Setter Property="Width" Value="{StaticResource RowHeight}" />
            <Setter Property="Height" Value="{StaticResource RowHeight}" />
            <Setter Property="Stretch" Value="None" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="ItemTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="{StaticResource UiFontSize}" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <DataTemplate x:Key="ProjectRootFolderTemplate" x:DataType="local:ProjectFolderVM">
            <StackPanel Orientation="Horizontal" Height="{StaticResource RowHeight}" Unloaded="OnDataTemplateUnloaded">
                <Border Width="{StaticResource RowHeight}" Height="{StaticResource RowHeight}">
                    <ToggleButton Style="{StaticResource ExpanderButtonStyle}" IsChecked="{x:Bind ShowExpanded, Mode=TwoWay}" Visibility="{x:Bind HasItems, Converter={StaticResource BoolToVisible}, Mode=OneWay}" />
                </Border>
                <Image Style="{StaticResource ItemIconStyle}" Source="ms-appx:///Assets/Icons/project.png" />
                <Border Height="{StaticResource RowHeight}" Padding="4,0,0,0" Background="Transparent" ToolTipService.ToolTip="{x:Bind FullPath, Mode=OneWay}">
                    <TextBlock Style="{StaticResource ItemTextStyle}" Text="{x:Bind DisplayName, Mode=OneWay}" />
                </Border>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ProjectFolderTemplate" x:DataType="local:ProjectFolderVM">
            <StackPanel Orientation="Horizontal" Height="{StaticResource RowHeight}" Margin="{x:Bind Level, Converter={StaticResource IndentConverter}}" Unloaded="OnDataTemplateUnloaded">
                <Border Width="{StaticResource RowHeight}" Height="{StaticResource RowHeight}">
                    <ToggleButton Style="{StaticResource ExpanderButtonStyle}" IsChecked="{x:Bind ShowExpanded, Mode=TwoWay}" Visibility="{x:Bind HasItems, Converter={StaticResource BoolToVisible}, Mode=OneWay}" />
                </Border>
                <Image Style="{StaticResource ItemIconStyle}" Source="{x:Bind ShowExpandedIcon, Converter={StaticResource BoolToFolder}, Mode=OneWay}" />
                <Border Height="{StaticResource RowHeight}" Padding="4,0,0,0" Background="Transparent" ToolTipService.ToolTip="{x:Bind FullPath, Mode=OneWay}">
                    <TextBlock Style="{StaticResource ItemTextStyle}" Text="{x:Bind DisplayName, Mode=OneWay}" />
                </Border>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ProjectFileTemplate" x:DataType="local:ProjectFileVM">
            <StackPanel Orientation="Horizontal" Height="{StaticResource RowHeight}" Margin="{x:Bind Level, Converter={StaticResource IndentConverter}, ConverterParameter=1}" Unloaded="OnDataTemplateUnloaded">
                <Image Style="{StaticResource ItemIconStyle}" Source="{x:Bind IsOpen, Converter={StaticResource BoolToPicture}, Mode=OneWay}" />
                <Border Height="{StaticResource RowHeight}" Padding="4,0,0,0" Background="Transparent" ToolTipService.ToolTip="{x:Bind FullPath, Mode=OneWay}">
                    <TextBlock Style="{StaticResource ItemTextStyle}" Text="{x:Bind DisplayName, Mode=OneWay}" />
                </Border>
            </StackPanel>
        </DataTemplate>

        <Style x:Key="ProjectItemContainerStyle" TargetType="local:FlatProjectItem">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
        </Style>

        <Style x:Key="ProjectFileContainerStyle" TargetType="local:FlatProjectItem" BasedOn="{StaticResource ProjectItemContainerStyle}">
            <Setter Property="ContextFlyout">
                <Setter.Value>
                    <MenuFlyout Opened="OnProjectItemContextMenuOpened">
                        <MenuFlyoutItem Text="Open" Command="{Binding ActivateCommand}" CommandParameter="{Binding}" />
                        <MenuFlyoutItem Text="Delete" Command="{Binding DeleteCommand}" CommandParameter="{Binding}" />
                        <MenuFlyoutItem Text="Rename" />
                    </MenuFlyout>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ProjectFolderContainerStyle" TargetType="local:FlatProjectItem" BasedOn="{StaticResource ProjectItemContainerStyle}">
            <Setter Property="ContextFlyout">
                <Setter.Value>
                    <MenuFlyout Opened="OnProjectItemContextMenuOpened">
                        <MenuFlyoutItem Text="Delete" Command="{Binding DeleteCommand}" CommandParameter="{Binding}" />
                        <MenuFlyoutItem Text="Rename" />
                    </MenuFlyout>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ProjectRootFolderContainerStyle" TargetType="local:FlatProjectItem" BasedOn="{StaticResource ProjectItemContainerStyle}">
            <Setter Property="ContextFlyout">
                <Setter.Value>
                    <MenuFlyout Opened="OnProjectItemContextMenuOpened">
                        <MenuFlyoutItem Text="Remove" Command="{Binding DeleteCommand}" CommandParameter="{Binding}" />
                    </MenuFlyout>
                </Setter.Value>
            </Setter>
        </Style>

        <local:ProjectItemTemplateSelector
            x:Key="ProjectItemTemplateSelector"
            RootFolderTemplate="{StaticResource ProjectRootFolderTemplate}"
            FolderTemplate="{StaticResource ProjectFolderTemplate}"
            FileTemplate="{StaticResource ProjectFileTemplate}" />

        <local:ProjectItemContainerStyleSelector
            x:Key="ProjectItemContainerStyleSelector"
            RootFolderStyle="{StaticResource ProjectRootFolderContainerStyle}"
            FolderStyle="{StaticResource ProjectFolderContainerStyle}"
            FileStyle="{StaticResource ProjectFileContainerStyle}"
            ItemStyle="{StaticResource ProjectItemContainerStyle}" />

        <Style x:Key="ProjectFolderListStyle" TargetType="ListBox">
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="SelectionMode" Value="Extended" />
            <Setter Property="ItemTemplateSelector" Value="{StaticResource ProjectItemTemplateSelector}" />
            <Setter Property="ItemContainerStyleSelector" Value="{StaticResource ProjectItemContainerStyleSelector}" />
        </Style>
    </Grid.Resources>

    <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*" />
    </Grid.RowDefinitions>

    <StackPanel Grid.Row="0" Orientation="Horizontal" Padding="4" Background="{StaticResource PaneBorderBrush}" VerticalAlignment="Top">
        <Button x:Uid="AddFolderButton" Style="{StaticResource ToolbarButtonStyle}" Command="{x:Bind State.AddFolderCommand}">
            <Image Source="ms-appx:///Assets/Icons/project-add.png" Width="20" Height="20" />
        </Button>
        <Button x:Uid="OpenFileButton" Style="{StaticResource ToolbarButtonStyle}" Command="{x:Bind State.OpenFileCommand}">
            <Image Source="ms-appx:///Assets/Icons/folder_open-picture.png" Width="20" Height="20" />
        </Button>
    </StackPanel>

    <local:FlatProjectList
        x:Name="ProjectList"
        Grid.Row="1"
        ScrollViewer.HorizontalScrollBarVisibility="Auto"
        ScrollViewer.HorizontalScrollMode="Auto"
        ScrollViewer.VerticalScrollBarVisibility="Auto"
        ScrollViewer.VerticalScrollMode="Auto"
        ItemsSource="{x:Bind State.BindableFlatItems}"
        Style="{StaticResource ProjectFolderListStyle}"
        Visibility="{x:Bind State.HasProjectFolders, Converter={StaticResource BoolToVisible}, Mode=OneWay}" />

    <TextBlock Grid.Row="1" TextWrapping="Wrap" Margin="4" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="{x:Bind State.HasProjectFolders, Converter={StaticResource BoolToInvisible}, Mode=OneWay}">
        <Run Text="To add a project folder, " /><Hyperlink Click="OnClickAddFolderLink"><Run Text="click here." /></Hyperlink>
    </TextBlock>
</Grid>
