<Grid
    x:Class="anim.OpenFileTabs"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:anim"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
    d:DataContext="{d:DesignInstance Type=local:OpenFileTabsVM, IsDesignTimeCreatable=True}">

    <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
    </Grid.ColumnDefinitions>

    <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
    </Grid.RowDefinitions>

    <Grid.Resources>
        <local:BoolToVisibleConverter x:Key="BoolToVisible" />

        <Style x:Key="TabItemContainerStyle" TargetType="ListBoxItem">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
        </Style>

        <Style x:Key="TabTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="{StaticResource UiFontSize}" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <DataTemplate x:Key="TabItemTemplate" x:DataType="local:IOpenFileVM">
            <StackPanel Orientation="Horizontal" Padding="4" Background="Transparent" PointerEntered="OnTabPointerEntered" PointerExited="OnTabPointerExited" ToolTipService.ToolTip="{x:Bind Tooltip, Mode=OneWay}" Unloaded="OnDataTemplateUnloaded">
                <TextBlock Text="{x:Bind Name, Mode=OneWay}" Style="{StaticResource TabTextStyle}" TextTrimming="CharacterEllipsis" MaxWidth="256" />
                <TextBlock Text="*" Visibility="{x:Bind IsDirty, Converter={StaticResource BoolToVisible}, Mode=OneWay}" Style="{StaticResource TabTextStyle}" />
                <Grid Margin="4,0,0,0" Width="24" Height="24">
                    <Button Style="{StaticResource ToolbarButtonStyle}" Visibility="{x:Bind ShowCloseButton, Converter={StaticResource BoolToVisible}, Mode=OneWay}" Command="{x:Bind CloseCommand}" CommandParameter="{x:Bind}">
                        <Image Source="ms-appx:///Assets/Icons/close_simple.png" Width="16" Height="16" />
                    </Button>
                </Grid>
            </StackPanel>
        </DataTemplate>

        <ItemsPanelTemplate x:Key="TabListPanelTemplate">
            <VirtualizingStackPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>

        <Style x:Key="TabListStyle" TargetType="ListBox">
            <Setter Property="Height" Value="32" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource TabItemContainerStyle}" />
            <Setter Property="ItemTemplate" Value="{StaticResource TabItemTemplate}" />
            <Setter Property="ItemsPanel" Value="{StaticResource TabListPanelTemplate}" />
        </Style>

        <Style x:Key="SimpleContentControlStyle" TargetType="ContentControl">
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentControl">
                        <ContentPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="ImageUiTemplate" x:DataType="local:OpenImageVM">
            <Grid Unloaded="OnDataTemplateUnloaded">
                <ContentControl Content="{x:Bind UserInterface, Mode=OneWay}" Style="{StaticResource SimpleContentControlStyle}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="UnknownUiTemplate" x:DataType="local:IOpenFileVM">
            <Grid Unloaded="OnDataTemplateUnloaded" BorderThickness="0,4,0,0" BorderBrush="{StaticResource PaneBorderBrush}">
                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="8">
                    <Run Text="Can't edit this type of file." /><LineBreak />
                    <Run Text="Path: " /><Run Text="{Binding Path}" />
                </TextBlock>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="NullUiTemplate" x:DataType="local:OpenNullFileVM">
            <Grid Unloaded="OnDataTemplateUnloaded" BorderThickness="0,4,0,0" BorderBrush="{StaticResource PaneBorderBrush}">
                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="8" TextWrapping="Wrap">
                    <Hyperlink Click="OnClickOpenFile"><Run Text="Click here" /></Hyperlink><Run Text=" to open an image file. Or use the Explorer pane." />
                </TextBlock>
            </Grid>
        </DataTemplate>

        <local:OpenFileUiTemplateSelector
            x:Key="FileUiTemplateSelector"
            ImageTemplate="{StaticResource ImageUiTemplate}"
            UnknownTemplate="{StaticResource UnknownUiTemplate}"
            NullTemplate="{StaticResource NullUiTemplate}"/>

        <DataTemplate x:Key="TabComboItemTemplate" x:DataType="local:IOpenFileVM">
            <Grid Unloaded="OnDataTemplateUnloaded">
                <TextBlock Text="{x:Bind Name, Mode=OneWay}" />
            </Grid>
        </DataTemplate>

        <Style x:Key="TabComboStyle" TargetType="ComboBox">
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="ItemTemplate" Value="{StaticResource TabComboItemTemplate}" />
            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid x:Name="LayoutRoot" Width="32" Height="32">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxBackgroundPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxBorderBrushPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxBackgroundPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxBorderBrushPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxForegroundFocused}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxForegroundFocused}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownGlyph" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDropDownGlyphForegroundFocused}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="FocusedPressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxForegroundFocusedPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxPlaceHolderForegroundFocusedPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownGlyph" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDropDownGlyphForegroundFocusedPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="PointerFocused" />
                                    <VisualState x:Name="FocusedDropDown">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Visibility" Duration="0">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DropDownStates">
                                    <VisualState x:Name="Opened">
                                        <Storyboard>
                                            <SplitOpenThemeAnimation
                                                OpenedTargetName="PopupBorder"
                                                ClosedTargetName="ContentPresenter"
                                                OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Closed">
                                        <Storyboard>
                                            <SplitCloseThemeAnimation
                                                OpenedTargetName="PopupBorder"
                                                ClosedTargetName="ContentPresenter"
                                                OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border
                                x:Name="Background"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                            <ContentPresenter x:Name="ContentPresenter" Content="{x:Null}" Visibility="Collapsed" />
                            <TextBlock x:Name="PlaceholderTextBlock" Visibility="Collapsed" />
                            <FontIcon
                                x:Name="DropDownGlyph"
                                IsHitTestVisible="False"
                                Foreground="{ThemeResource ComboBoxDropDownGlyphForeground}"
                                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                FontSize="12"
                                Glyph="&#xE0E5;"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                AutomationProperties.AccessibilityView="Raw" />
                            <Popup x:Name="Popup">
                                <Border
                                    x:Name="PopupBorder"
                                    Background="{ThemeResource ComboBoxDropDownBackground}"
                                    BorderBrush="{ThemeResource ComboBoxDropDownBorderBrush}"
                                    BorderThickness="{ThemeResource ComboBoxDropdownBorderThickness}"
                                    Margin="0,-1,0,-1"
                                    HorizontalAlignment="Stretch">
                                    <ScrollViewer
                                        x:Name="ScrollViewer"
                                        Foreground="{ThemeResource ComboBoxDropDownForeground}"
                                        MinWidth="{Binding TemplateSettings.DropDownContentMinWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        VerticalSnapPointsType="OptionalSingle"
                                        VerticalSnapPointsAlignment="Near"
                                        HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                        VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                        IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                        IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                        IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                        BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                        ZoomMode="Disabled"
                                        AutomationProperties.AccessibilityView="Raw">
                                        <ItemsPresenter Margin="{ThemeResource ComboBoxDropdownContentMargin}" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
        </Style>
    </Grid.Resources>

    <ListBox
        x:Name="TabsList"
        Grid.Column="0"
        Grid.Row="0"
        ItemsSource="{x:Bind State.Files}"
        SelectedItem="{x:Bind State.FocusFileOrNull, Mode=TwoWay}"
        Style="{StaticResource TabListStyle}"
        Visibility="{x:Bind State.HasFiles, Converter={StaticResource BoolToVisible}, Mode=OneWay}" />

    <ComboBox
        Grid.Column="1"
        Grid.Row="0"
        ItemsSource="{x:Bind State.Files}"
        SelectedItem="{x:Bind State.FocusFileOrNull, Mode=TwoWay}"
        Style="{StaticResource TabComboStyle}"
        Visibility="{x:Bind State.HasFiles, Converter={StaticResource BoolToVisible}, Mode=OneWay}" />

    <ContentControl
        Grid.Column="0"
        Grid.ColumnSpan="2"
        Grid.Row="1"
        Content="{x:Bind State.FocusFile, Mode=OneWay}"
        ContentTemplateSelector="{StaticResource FileUiTemplateSelector}"
        Style="{StaticResource SimpleContentControlStyle}" />

</Grid>
